{"version":3,"sources":["components/Form.js","components/Footer.js","components/Navigation.js","components/Result.js","components/HomePage.js","components/ErrorPage.js","components/Forecast.js","components/App.js","serviceWorker.js","index.js"],"names":["library","add","faSearch","Form","props","react_default","a","createElement","className","onSubmit","submit","value","onChange","change","type","placeholder","react_fontawesome_index_es","icon","Footer","Navigation","NavLink","to","activeClassName","faSun","faCloudSun","faCloud","faCloudRain","faCloudShowersHeavy","faPooStorm","faSnowflake","faSmog","faMoon","Result","_props$weather","weather","city","sunrise","sunset","temp","pressure","wind","main","humidity","temp_min","temp_max","displayCity","toLowerCase","sunriseTime","Date","toLocaleTimeString","sunsetTime","Fragment","changeIcon","HomePage","activeSubmit","Redirect","ErrorPage","concat","Forecast","App","state","err","himidity","fetchInProgress","handleInputChange","e","_this","setState","target","handleCitySubmit","preventDefault","API","fetch","then","response","ok","Error","json","data","prevState","sys","speed","catch","_this2","this","_this$state","BrowserRouter","basename","components_Form","components_Navigation","Switch","Route","path","exact","render","components_ErrorPage","components_HomePage","components_Result","component","react_loader_spinner_default","color","height","width","components_Footer","Component","Boolean","window","location","hostname","match","ReactDOM","components_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.5f3f8faf.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"../styles/Form.css\";\r\nimport { library } from '@fortawesome/fontawesome-svg-core'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faSearch } from '@fortawesome/free-solid-svg-icons'\r\nlibrary.add(faSearch)\r\n\r\nconst Form = (props) => {\r\n  return (\r\n\r\n    <form className=\"form\" onSubmit={props.submit}>\r\n      <input\r\n        className=\"form__input\"\r\n        value={props.value}\r\n        onChange={props.change}\r\n        type=\"text\"\r\n        placeholder=\"Search...\"\r\n      />\r\n      <button className=\"form__button\"><FontAwesomeIcon icon=\"search\" /></button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n","import React from 'react';\r\nimport \"../styles/Footer.css\";\r\nconst Footer = () => {\r\n    return (\r\n        <div className=\"footer\">\r\n            <span className=\"footer__item\">&#169; 2019 Rafa≈Ç Labisz</span>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Footer;","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport \"../styles/Navigation.css\";\r\n\r\nconst Navigation = (props) => {\r\n  return (\r\n    <nav className=\"nav\">\r\n      <ul className=\"menu\">\r\n        <li className=\"menu__item\"><NavLink className=\"menu__item--btn\" to=\"/today\" activeClassName=\"menu__item--btnActive\">Today</NavLink></li>\r\n        <li className=\"menu__item\"><NavLink to=\"/forecast\" className=\"menu__item--btn\" activeClassName=\"menu__item--btnActive\">Forecast</NavLink></li>\r\n      </ul>\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default Navigation;","import React from \"react\";\r\nimport \"../styles/Result.css\";\r\nimport { library } from '@fortawesome/fontawesome-svg-core'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faSun, faCloudSun, faCloud, faCloudRain, faCloudShowersHeavy, faPooStorm, faSnowflake, faSmog, faMoon } from '@fortawesome/free-solid-svg-icons'\r\n\r\nlibrary.add(faSun, faCloudSun, faCloud, faCloudRain, faCloudShowersHeavy, faPooStorm, faSnowflake, faSmog, faMoon)\r\n\r\n\r\nconst Result = (props) => {\r\n  const { city, sunrise, sunset, temp, pressure, wind, main, humidity, temp_min, temp_max } = props.weather;\r\n  const displayCity = city.toLowerCase();\r\n  const sunriseTime = new Date(sunrise * 1000).toLocaleTimeString();\r\n  const sunsetTime = new Date(sunset * 1000).toLocaleTimeString();\r\n\r\n  return (\r\n    <>\r\n      <div className=\"result\">\r\n        <div className=\"result__image\"><FontAwesomeIcon icon={props.changeIcon()} /></div>\r\n\r\n        <div className=\"result__data\">\r\n          <span>{temp}&#176;C</span>\r\n          <span>{main}</span>\r\n          <span>{displayCity}</span>\r\n        </div>\r\n      </div>\r\n      <div className=\"result__details\">\r\n        <div className=\"result__details--containerLeft\">\r\n          <span>{temp} &#176;C</span>\r\n          <span>Temperature</span>\r\n        </div>\r\n        <div className=\"result__details--containerRight\">\r\n          <span>{wind} m/sec</span>\r\n          <span>Wind</span>\r\n        </div>\r\n\r\n      </div>\r\n      <div className=\"information__container\">\r\n        <span className=\"information__container--line\"></span></div>\r\n      <div className=\"result__particulars\">\r\n        <div className=\"particulars__container\">\r\n          <div className=\"particulars__wrapp\">\r\n            <span>{temp_min}  &#176;C</span>\r\n            <span className=\"particulars__wrapp--name\">Temp min</span>\r\n            <span>{temp_max}  &#176;C</span>\r\n            <span className=\"particulars__wrapp--name\">Temp max</span>\r\n          </div>\r\n          <div className=\"particulars__wrapp\">\r\n            <span>{humidity} %</span>\r\n            <span className=\"particulars__wrapp--name\">Humidity</span>\r\n            <span>{pressure} hPa</span>\r\n            <span className=\"particulars__wrapp--name\">Pressure</span>\r\n          </div>\r\n          <div className=\"particulars__wrapp\">\r\n            <span>{sunriseTime}</span>\r\n            <span className=\"particulars__wrapp--name\">Sunrise</span>\r\n            <span>{sunsetTime}</span>\r\n            <span className=\"particulars__wrapp--name\">Sunset</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Result;\r\n\r\n","import React from 'react';\r\nimport \"../styles/HomePage.css\";\r\nimport { Redirect } from 'react-router-dom'\r\nconst HomePage = (props) => {\r\n    return (\r\n        <div className=\"information__homePage\">\r\n            <h1 className=\"homePage--title\">Welcome in my Weather App.</h1>\r\n            <p className=\"homePage--description\">Find your city and check the current weather!</p>\r\n            {props.activeSubmit && <Redirect to=\"/today\" />}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HomePage;","import React from 'react';\r\nimport \"../styles/ErrorPage.css\";\r\n\r\nconst ErrorPage = (props) => {\r\n    return (\r\n        <div className=\"information__errorPage\">\r\n            <h1 className=\"errorPage--title\">{`We don't have ${props.city} in the city base.`}</h1>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ErrorPage;","import React from 'react';\r\nimport '../styles/Forecast.css';\r\n\r\nconst Forecast = () => {\r\n    return (\r\n        <div className=\"information__errorPage\">\r\n            <h1 className=\"errorPage--title\">In process...</h1>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Forecast;","import React, { Component } from \"react\";\nimport \"../styles/App.css\";\nimport Form from \"./Form\";\nimport Footer from \"./Footer\";\nimport Navigation from './Navigation';\nimport Result from './Result';\nimport HomePage from './HomePage';\nimport ErrorPage from './ErrorPage';\nimport Forecast from './Forecast';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport Loader from 'react-loader-spinner';\n\nclass App extends Component {\n  state = {\n    value: \"\",\n    city: \"\",\n    sunrise: \"\",\n    sunset: \"\",\n    temp: \"\",\n    pressure: \"\",\n    wind: \"\",\n    err: false,\n    icon: \"\",\n    main: \"\",\n    himidity: \"\",\n    temp_min: \"\",\n    temp_max: \"\",\n    activeSubmit: false,\n    fetchInProgress: false,\n  };\n\n  handleInputChange = e => {\n    this.setState({\n      value: e.target.value,\n      activeSubmit: false,\n    });\n  };\n\n  handleCitySubmit = e => {\n    e.preventDefault();\n    this.setState({ fetchInProgress: true });\n    const API = `https://cors-anywhere.herokuapp.com/http://api.openweathermap.org/data/2.5/weather?q=${this.state.value},id=524901&APPID=7e4e130100ba6d5091d438d72faf53c7&units=metric`;\n    fetch(API)\n      .then(response => {\n        if (response.ok) {\n          return response;\n        }\n        throw Error(\"Error\");\n      })\n      .then(response => response.json())\n      .then(data => {\n        this.setState(prevState => ({\n          city: prevState.value,\n          value: \"\",\n          sunrise: data.sys.sunrise,\n          sunset: data.sys.sunset,\n          temp: data.main.temp,\n          pressure: data.main.pressure,\n          wind: data.wind.speed,\n          err: false,\n          icon: data.weather[0].icon,\n          main: data.weather[0].main,\n          humidity: data.main.humidity,\n          temp_min: data.main.temp_min,\n          temp_max: data.main.temp_max,\n          activeSubmit: true,\n          fetchInProgress: false\n        }));\n      })\n      .catch(err => {\n        this.setState(prevState => ({\n          err: true,\n          city: prevState.value,\n          value: \"\",\n          fetchInProgress: false\n        }));\n      });\n  };\n\n\n  changeIcon = () => {\n    switch (this.state.icon) {\n      case \"01d\": return \"sun\";\n      case \"02d\": return \"cloud-sun\";\n      case \"03d\": return \"cloud\";\n      case \"04d\": return \"cloud\";\n      case \"09d\": return \"cloud-rain\";\n      case \"10d\": return \"cloud-showers-heavy\";\n      case \"11d\": return \"poo-storm\";\n      case \"13d\": return \"snowflake\";\n      case \"50d\": return \"smog\";\n      case \"01n\": return \"moon\";\n      case \"02n\": return \"cloud\";\n      case \"03n\": return \"cloud\";\n      case \"04n\": return \"cloud\";\n      case \"09n\": return \"cloud-rain\";\n      case \"10n\": return \"cloud-showers-heavy\";\n      case \"11n\": return \"poo-storm\";\n      case \"13n\": return \"snowflake\";\n      case \"50n\": return \"smog\";\n      default: return \"cloud\";\n    }\n  }\n\n  render() {\n    const { city, activeSubmit, err, value, fetchInProgress } = this.state;\n    return (\n      <Router basename=\"/weather-application/#\">\n        <div className=\"app\">\n          <div className=\"app__wrapper\">\n            <header className=\"header\">\n\n              <Form\n                value={value}\n                change={this.handleInputChange}\n                submit={this.handleCitySubmit}\n              />\n              <Navigation />\n\n            </header>\n            <main>\n              <section className=\"information\">\n                <Switch>\n                  <Route path=\"/weather-application\" exact render={() => (\n                    !err ? <HomePage activeSubmit={activeSubmit} /> : <ErrorPage city={city} />)} />\n                  <Route path=\"/today\" render={() => (\n                    city && !err ? <Result\n                      weather={this.state}\n                      changeIcon={this.changeIcon}\n                    /> : <ErrorPage city={city} />)}\n                  />\n                  <Route path=\"/forecast\" exact component={Forecast} />\n                </Switch>\n                {fetchInProgress && <div className=\"information__loader\"><Loader\n                  type=\"Grid\"\n                  color=\"orangered\"\n                  height={30}\n                  width={30}\n                />\n                </div>}\n              </section>\n            </main>\n          </div>\n          <footer>\n            <Footer />\n          </footer>\n        </div>\n      </Router >\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./styles/index.css\";\nimport App from \"./components/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}